@model PagedList.IPagedList<Flashcards.Models.FlashCard>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Flashcards";
    var nr = ViewData["nr"];
}




@foreach (var item in Model)
{
    <ul class="words">
        <li>
            <div class="word">
                @if (item.Image != null)
                {
                    <div class="img">
                        <img src="~/images/@item.Image"  style="width:150px; height:150px; " />
                    </div>
                }

                <div id="word1">

                    <p class="h1">      @Html.DisplayFor(modelItem => item.Word1) </p>

                </div>

                <div id="word2" style="display: none;">

                    <p class="h1">    @Html.DisplayFor(modelItem => item.Word2) </p>

                </div>

            </div>
        </li>
       </ul>
    <ul class="options">
        <li>
            <div class="option">
                <a href="@Url.Action("Index", "FlashCards", new { page = Model.PageNumber, nr = nr  , know = 1 })">
                    <img src="~/images/check.png" width="100px" height="100px" alt="I know what this mean/Znam to  ">
                    <a />
            </div>
        </li>
        <li>
            
                <button class="option" type="button"
                        onclick="updateLabel()" style="width:36rem;">
                    <p class="h1"> FLIP </p>
                </button>
            

        </li>
        <li>
            <div class="option">
                <a href="@Url.Action("Index", "FlashCards",new { page = Model.PageNumber, nr = nr, know = 0 })">
                    <img src="~/images/X.png" width="100px" height="100px" alt="I dont't know what this mean / Nie wiem co to znaczy ">
                    <a />
            </div>
        </li>
    </ul>
}


<br />





<script type="text/javascript">

    function updateLabel() {
        var data = @Html.Raw(Json.Encode(Model.First()));

                var lbd = document.getElementById("word1");
                var lbd2 = document.getElementById("word2");
        var synth = window.speechSynthesis;
        var word1 = data.Word1;
        var word2 = data.Word2;

        console.log(word1);
console.log(word2);


         if (window.getComputedStyle(lbd2).display === "none")  {
            lbd2.style.display = "block";

            lbd.style.display = "none";

                    var utterance1 = new SpeechSynthesisUtterance(word2);
                    utterance1.lang = 'en-US';




                }
                else {


            lbd2.style.display = "none";
                    lbd.style.display = "block";


                    var utterance1 = new SpeechSynthesisUtterance(word1);
                    utterance1.lang = 'pl-PL';

            }


        synth.speak(utterance1);


                var amISpeaking = synth.speaking;

            }
</script>
