@model PagedList.IPagedList<Flashcards.Models.Course>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Chapters";
}

<h1>
    @Html.ActionLink("Create New", "Create")
</h1>

@using (Html.BeginForm("Index", "Courses", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input class="form-control" type="submit" value="Search" />
    </p>
}
<ul class="products">
    @foreach (var item in Model)
    {
    <li>
        <div class="product">

            <a href="@Url.Action("Details"+"/"+item.ID, "Courses")">
                <div class="product-name">
                    @Html.DisplayFor(modelItem => item.Name)
                </div>
                <a />
                @if (User.Identity.Name == item.IDUSER || User.IsInRole("Admin"))
                {

                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })

                    @Html.ActionLink(" Edit ", "Edit", new { id = item.ID })


                }


</div>
       
    </li>



    }

</ul>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
